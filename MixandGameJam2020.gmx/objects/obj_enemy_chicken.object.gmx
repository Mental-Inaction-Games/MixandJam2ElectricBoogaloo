<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_chicken</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
enemy_name = "Chicken";
drop_item = obj_fx_dust;
enemy_speed = 0.6;

lay_counter = choose(4,5);
is_laying_egg = false;
prev_dir = "left";
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Movement
left = 0;
right = 0;
up = 0;
down = 0;

alarm[0] = room_speed;
    
if!(is_laying_egg){
    // Randomly choose direction and move based on obj_solid position. More likely to move in the last direction chosen
    var target_direction = choose("left","right","up","down",prev_dir);
    
    
    if(target_direction == "left"){
        left = 1;
        if(!place_meeting(x-16,y,obj_solid)){
            targetX = x - 16;
        } else {
            targetX = x;
            alarm[0] = 5;
        }  
    }
    
    if(target_direction == "right"){
        right = 1;
        if(!place_meeting(x+16,y,obj_solid)){
            targetX = x + 16;  
        } else {
            targetX = x;
            alarm[0] = 5;
        }    
    }
    
    if(target_direction == "up"){
        up = 1;
        if(!place_meeting(x,y-16,obj_solid)){
        targetY = y - 16;
        } else {
            targetY = y;
            alarm[0] = 5;
        }
    }
    
    if(target_direction == "down"){
        down = 1;
        if(!place_meeting(x,y+16,obj_solid)){
            targetY = y + 16;
        } else {
            targetY = y;
            alarm[0] = 5;
        }
        
    }
    
    //vx = (right - left) * enemy_speed;
    //vy = (down - up) * enemy_speed;
    
    
    prev_dir = target_direction;
    can_move = true;
}else{
    can_move = true;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index == spr_chicken){
    //instance_create(x+8,y,obj_fx_dust);
    //instance_create(x+14,y,obj_fx_dust);
    
    if(lay_counter &gt; 0){
        lay_counter--;
    }else{
        is_laying_egg = true;
        sprite_index = spr_chicken_lay;
    };
}else if(sprite_index == spr_chicken_lay){
    sprite_index = spr_chicken;
    lay_counter = choose(4,5);
    is_laying_egg = false;
    if!(place_meeting(x+8,y,obj_drop_egg)){
        instance_create(x+8,y,obj_drop_egg);
    };
};


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if((can_move)and!(is_laying_egg)){
    if(image_index &gt; 3){
        z = 4;
    }else{
        z = 0;
    };
}else{
    z = 0;
};
event_inherited();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
