<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_noodle</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
drop_item = obj_drop_noodle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Enemy Movement
left = 0;
right = 0;
up = 0;
down = 0;

alarm[0] = room_speed;

// Randomly choose direction and move based on obj_solid position
var target_direction = choose("left","right","up","down");

if(target_direction == "left"){
    left = 1;
    if(!place_meeting(x-16,y,obj_solid)){
        targetX = x - 16;
    } else {
        targetX = x;
        alarm[0] = 5;
    }  
}

if(target_direction == "right"){
    right = 1;
    if(!place_meeting(x+16,y,obj_solid)){
        targetX = x + 16;  
    } else {
        targetX = x;
        alarm[0] = 5;
    }    
}

if(target_direction == "up"){
    up = 1;
    if(!place_meeting(x,y-16,obj_solid)){
    targetY = y - 16;
    } else {
        targetY = y;
        alarm[0] = 5;
    }
}

if(target_direction == "down"){
    down = 1;
    if(!place_meeting(x,y+16,obj_solid)){
        targetY = y + 16;
    } else {
        targetY = y;
        alarm[0] = 5;
    }
    
}

//vx = (right - left) * enemy_speed;
//vy = (down - up) * enemy_speed;





can_move = true;

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
