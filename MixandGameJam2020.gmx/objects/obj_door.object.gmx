<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_door</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Initialize Door

image_speed = 0.25;
door_state = "state_waiting";
interact_text = "Speak";

ingredient_one = spr_tomato_drop;
ingredient_two = spr_carrot_drop;
desired_food = spr_cooked_salad;
food_given = spr_cooked_mistake;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if!(game_is_paused()){
    //finite state machine
    switch(door_state){
        case "state_waiting":
            interact_text = "Speak";
            if((place_meeting(x,y+24,obj_player_mia))and(keyboard_check_pressed(ord("X")))){
                door_state = "state_hungry";
                desired_food = choose(spr_cooked_braised_carrot,spr_cooked_spaghetti,spr_cooked_salad,spr_cooked_ramen,spr_cooked_glaized_ham,spr_cooked_breakfast);
            };
            break;
            
        case "state_hungry":
            interact_text = "Feed";
            break;
            
        case "state_eating":
            interact_text = "";
            break;
    };
};




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="7">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(sprite_index == spr_door_eat){
    if(food_given == desired_food){
        audio_play_sound(snd_success,10,0);
    }else{
        audio_play_sound(snd_failure,10,0);
    };
    
    door_state = "state_hungry";  
    desired_food = choose(spr_cooked_braised_carrot,spr_cooked_spaghetti,spr_cooked_salad,spr_cooked_ramen,spr_cooked_glaized_ham,spr_cooked_breakfast);
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if(door_state == "state_waiting"){
    draw_sprite(spr_arrow,image_index,x,y-12);
}else if(door_state == "state_hungry"){
    switch(desired_food){
        case spr_cooked_braised_carrot:
            ingredient_one = spr_carrot_drop;
            ingredient_two = spr_honey_drop;
            break;
        
        case spr_cooked_spaghetti:
            ingredient_one = spr_noodle_drop;
            ingredient_two = spr_tomato_drop;
            break;
            
        case spr_cooked_salad:
            ingredient_one = spr_carrot_drop;
            ingredient_two = spr_tomato_drop;
            break;
            
        case spr_cooked_ramen:
            ingredient_one = spr_noodle_drop;
            ingredient_two = spr_egg_drop;
            break;
            
        case spr_cooked_glaized_ham:
            ingredient_one = spr_ham_drop;
            ingredient_two = spr_honey_drop;
            break;
            
        case spr_cooked_breakfast:
            ingredient_one = spr_egg_drop;
            ingredient_two = spr_ham_drop;
            break;
    };

    draw_sprite(spr_hud_recipe,0,view_wview-110,8);
    draw_sprite(ingredient_one,0,view_wview-99,26)
    draw_sprite(ingredient_two,0,view_wview-78,26)
    draw_sprite(desired_food,0,view_wview-57,26)
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite(sprite_index,image_index,x,y);

//If player is next to door
var door_collide = place_meeting(x, y + 32, obj_player_mia);

if!(game_is_paused()){
    if(door_state == "state_eating"){
        sprite_index = spr_door_eat;
        image_speed = 0.15;
    ///When player is near change sprite
    }else if(door_collide){
        image_speed = 0.15;
        sprite_index = spr_door_speaking;
        
        //draw interact for door
        if(place_meeting(x,y+16,obj_player_mia)){
            draw_sprite(spr_interact,0,x-24,y-12);
            draw_text(x-8,y-12,interact_text);
        };
    }else{
        image_speed = 0.08;
        sprite_index = spr_door_idle;
    };
}else{
    image_speed = 0;
};
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
